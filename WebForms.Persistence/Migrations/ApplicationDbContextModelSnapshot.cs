// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebForms.Persistence;

#nullable disable

namespace WebForms.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TagTemplate", b =>
                {
                    b.Property<decimal>("TagsId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("TemplatesId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("TagsId", "TemplatesId");

                    b.HasIndex("TemplatesId");

                    b.ToTable("TagTemplate");
                });

            modelBuilder.Entity("WebForms.Core.Models.Form", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.PrimitiveCollection<string>("AnswersMultipleLine")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("AnswersNonNegativeIntegers")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("AnswersOneLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FormFillerId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("FormOwnerId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("TemplateId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("FormFillerId");

                    b.HasIndex("FormOwnerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("WebForms.Core.Models.SelectionQuestion", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.PrimitiveCollection<string>("ResponseOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TemplateId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("SelectionQuestions");
                });

            modelBuilder.Entity("WebForms.Core.Models.SelectionQuestionAnswer", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.PrimitiveCollection<string>("Answers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FormId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("QuestionId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.ToTable("SelectionQuestionAnswers");
                });

            modelBuilder.Entity("WebForms.Core.Models.Tag", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WebForms.Core.Models.Template", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.PrimitiveCollection<string>("AccessHoldersEmails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreatorId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("IntegersQuestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.PrimitiveCollection<string>("MultipleLineQuestions")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("OneLineQuestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Topic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("WebForms.Core.Models.User", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TagTemplate", b =>
                {
                    b.HasOne("WebForms.Core.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebForms.Core.Models.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebForms.Core.Models.Form", b =>
                {
                    b.HasOne("WebForms.Core.Models.User", "FormFiller")
                        .WithMany("FilledForms")
                        .HasForeignKey("FormFillerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebForms.Core.Models.User", "FormOwner")
                        .WithMany("ReceivedAnswersForms")
                        .HasForeignKey("FormOwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebForms.Core.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FormFiller");

                    b.Navigation("FormOwner");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("WebForms.Core.Models.SelectionQuestion", b =>
                {
                    b.HasOne("WebForms.Core.Models.Template", "Template")
                        .WithMany("SelectionQuestions")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Template");
                });

            modelBuilder.Entity("WebForms.Core.Models.SelectionQuestionAnswer", b =>
                {
                    b.HasOne("WebForms.Core.Models.Form", "Form")
                        .WithMany("SelectionQuestionAnswers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebForms.Core.Models.SelectionQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("WebForms.Core.Models.Template", b =>
                {
                    b.HasOne("WebForms.Core.Models.User", "Creator")
                        .WithMany("OwnTemplates")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("WebForms.Core.Models.Form", b =>
                {
                    b.Navigation("SelectionQuestionAnswers");
                });

            modelBuilder.Entity("WebForms.Core.Models.SelectionQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("WebForms.Core.Models.Template", b =>
                {
                    b.Navigation("SelectionQuestions");
                });

            modelBuilder.Entity("WebForms.Core.Models.User", b =>
                {
                    b.Navigation("FilledForms");

                    b.Navigation("OwnTemplates");

                    b.Navigation("ReceivedAnswersForms");
                });
#pragma warning restore 612, 618
        }
    }
}
